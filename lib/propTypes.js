"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  // General
  direction: _propTypes2.default.oneOf(["rtl", "ltr"]),
  rowHeight: _propTypes2.default.number.isRequired,
  data: _propTypes2.default.any,
  loading: _propTypes2.default.bool,
  showPagination: _propTypes2.default.bool,
  showPaginationTop: _propTypes2.default.bool,
  showPaginationBottom: _propTypes2.default.bool,
  showPageSizeOptions: _propTypes2.default.bool,
  pageSizeOptions: _propTypes2.default.array,
  defaultPageSize: _propTypes2.default.number,
  showPageJump: _propTypes2.default.bool,
  collapseOnSortingChange: _propTypes2.default.bool,
  collapseOnPageChange: _propTypes2.default.bool,
  collapseOnDataChange: _propTypes2.default.bool,
  freezeWhenExpanded: _propTypes2.default.bool,
  sortable: _propTypes2.default.bool,
  resizable: _propTypes2.default.bool,
  filterable: _propTypes2.default.bool,
  defaultSortDesc: _propTypes2.default.bool,
  defaultSorted: _propTypes2.default.array,
  defaultFiltered: _propTypes2.default.array,
  defaultResized: _propTypes2.default.array,
  defaultExpanded: _propTypes2.default.object,
  defaultFilterMethod: _propTypes2.default.func,
  defaultSortMethod: _propTypes2.default.func,

  // Controlled State Callbacks
  onPageChange: _propTypes2.default.func,
  onPageSizeChange: _propTypes2.default.func,
  onSortedChange: _propTypes2.default.func,
  onFilteredChange: _propTypes2.default.func,
  onResizedChange: _propTypes2.default.func,
  onExpandedChange: _propTypes2.default.func,

  // Pivoting
  pivotBy: _propTypes2.default.array,

  // Key Constants
  pivotValKey: _propTypes2.default.string,
  pivotIDKey: _propTypes2.default.string,
  subRowsKey: _propTypes2.default.string,
  aggregatedKey: _propTypes2.default.string,
  nestingLevelKey: _propTypes2.default.string,
  originalKey: _propTypes2.default.string,
  indexKey: _propTypes2.default.string,
  groupedByPivotKey: _propTypes2.default.string,

  // Server-side Callbacks
  onFetchData: _propTypes2.default.func,

  // Classes
  className: _propTypes2.default.string,
  style: _propTypes2.default.object,

  // Component decorators
  getProps: _propTypes2.default.func,
  getTableProps: _propTypes2.default.func,
  getTheadGroupProps: _propTypes2.default.func,
  getTheadGroupTrProps: _propTypes2.default.func,
  getTheadGroupThProps: _propTypes2.default.func,
  getTheadProps: _propTypes2.default.func,
  getTheadTrProps: _propTypes2.default.func,
  getTheadThProps: _propTypes2.default.func,
  getTheadFilterProps: _propTypes2.default.func,
  getTheadFilterTrProps: _propTypes2.default.func,
  getTheadFilterThProps: _propTypes2.default.func,
  getTbodyProps: _propTypes2.default.func,
  getTrGroupProps: _propTypes2.default.func,
  getTrProps: _propTypes2.default.func,
  getTdProps: _propTypes2.default.func,
  getTfootProps: _propTypes2.default.func,
  getTfootTrProps: _propTypes2.default.func,
  getTfootTdProps: _propTypes2.default.func,
  getPaginationProps: _propTypes2.default.func,
  getLoadingProps: _propTypes2.default.func,
  getNoDataProps: _propTypes2.default.func,
  getResizerProps: _propTypes2.default.func,

  // Global Column Defaults
  columns: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    // Renderers
    Cell: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),
    Header: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),
    Footer: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),
    Aggregated: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),
    Pivot: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),
    PivotValue: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),
    Expander: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),
    Filter: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func]),

    // All Columns
    sortable: _propTypes2.default.bool, // use table default
    resizable: _propTypes2.default.bool, // use table default
    filterable: _propTypes2.default.bool, // use table default
    show: _propTypes2.default.bool,
    minWidth: _propTypes2.default.number,
    minResizeWidth: _propTypes2.default.number,

    // Cells only
    className: _propTypes2.default.string,
    style: _propTypes2.default.object,
    getProps: _propTypes2.default.func,

    // Pivot only
    aggregate: _propTypes2.default.func,

    // Headers only
    headerClassName: _propTypes2.default.string,
    headerStyle: _propTypes2.default.object,
    getHeaderProps: _propTypes2.default.func,

    // Footers only
    footerClassName: _propTypes2.default.string,
    footerStyle: _propTypes2.default.object,
    getFooterProps: _propTypes2.default.func,
    filterMethod: _propTypes2.default.func,
    filterAll: _propTypes2.default.bool,
    sortMethod: _propTypes2.default.func
  })),

  // Global Expander Column Defaults
  expanderDefaults: _propTypes2.default.shape({
    sortable: _propTypes2.default.bool,
    resizable: _propTypes2.default.bool,
    filterable: _propTypes2.default.bool,
    width: _propTypes2.default.number
  }),

  pivotDefaults: _propTypes2.default.object,

  // Text
  previousText: _propTypes2.default.node,
  nextText: _propTypes2.default.node,
  loadingText: _propTypes2.default.node,
  noDataText: _propTypes2.default.node,
  pageText: _propTypes2.default.node,
  ofText: _propTypes2.default.node,
  rowsText: _propTypes2.default.node,
  pageJumpText: _propTypes2.default.node,
  rowsSelectorText: _propTypes2.default.node,

  // Components
  TableComponent: _propTypes2.default.elementType,
  TheadComponent: _propTypes2.default.elementType,
  TbodyComponent: _propTypes2.default.elementType,
  TrGroupComponent: _propTypes2.default.elementType,
  TrComponent: _propTypes2.default.elementType,
  ThComponent: _propTypes2.default.elementType,
  TdComponent: _propTypes2.default.elementType,
  TfootComponent: _propTypes2.default.elementType,
  FilterComponent: _propTypes2.default.elementType,
  ExpanderComponent: _propTypes2.default.elementType,
  PivotValueComponent: _propTypes2.default.elementType,
  AggregatedComponent: _propTypes2.default.elementType,
  // this is a computed default generated using
  PivotComponent: _propTypes2.default.elementType,
  // the ExpanderComponent and PivotValueComponent at run-time in methods.js
  PaginationComponent: _propTypes2.default.elementType,
  PreviousComponent: _propTypes2.default.elementType,
  NextComponent: _propTypes2.default.elementType,
  LoadingComponent: _propTypes2.default.elementType,
  NoDataComponent: _propTypes2.default.elementType,
  ResizerComponent: _propTypes2.default.elementType,
  PadRowComponent: _propTypes2.default.elementType
};
//# sourceMappingURL=data:application/json;base64,